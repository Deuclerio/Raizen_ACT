@model UPD8.Data.Domain.Entity.PessoaEntity

@{
    ViewData["Title"] = "Editar";
}


<h4>Pessoa</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Update">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />

            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>



            @Html.LabelFor(model => model.DataNascimento)
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control"} })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })

            <div class="form-group">
                <label asp-for="Cep" class="control-label"></label>
                <input asp-for="Cep" class="form-control" />
                <span asp-validation-for="Cep" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" /> |
                <a asp-action="Index">Voltar</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
